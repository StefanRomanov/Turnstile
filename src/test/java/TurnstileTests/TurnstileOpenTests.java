package TurnstileTests;

import domain.Turnstile;
import domain.TurnstileState;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class TurnstileOpenTests {

    private Turnstile turnstile;

    @Before
    public void prepare(){
        this.turnstile = new Turnstile();
        turnstile.key();
    }

    @Test
    public void testSetup(){
        Assert.assertEquals("Turnstile should be in Open state", TurnstileState.Open, this.turnstile.getState());
    }

    @Test
    public void openStateInsertCoin(){
        Assert.assertFalse("Putting coin when in state Paid should return False", this.turnstile.putCoin());
        Assert.assertEquals("Putting coin when in state Paid should should not change the state", TurnstileState.Open ,this.turnstile.getState());
    }

    @Test
    public void openStateApplyKey(){
        this.turnstile.key();
        Assert.assertEquals("Using key when in state Open should change the state to Locked", TurnstileState.Locked ,this.turnstile.getState());
    }

    @Test
    public void openStateAttemptPass(){
        Assert.assertTrue("Trying to pass when in state Open should return True", this.turnstile.canPass());
        Assert.assertEquals("Passing when in state Open should not change the state", TurnstileState.Open, this.turnstile.getState());
    }

    @Test
    public void multiplePassesInOpenStateTest(){
        this.turnstile.canPass();
        this.turnstile.canPass();

        Assert.assertTrue("Multiple passes in Open state should be allowed and return True", this.turnstile.canPass());
        Assert.assertEquals("After multiple passes state should remain Open", TurnstileState.Open, this.turnstile.getState());
    }
}
